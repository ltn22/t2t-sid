<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.14 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc toc="yes"?>

<rfc ipr="trust200902" docName="draft-toutain-t2t-sid-extension" category="std">

  <front>
    <title abbrev="SID Extention">SID Extention to efficiently manipulate YANG Data Models</title>

    <author initials="L." surname="Toutain" fullname="Laurent Toutain">
      <organization>Institut MINES TELECOM; IMT Atlantique</organization>
      <address>
        <postal>
          <street>2 rue de la Chataigneraie</street> <street>CS 17607</street>
          <city>35576 Cesson-Sevigne Cedex</city>
          <country>France</country>
        </postal>
        <email>Laurent.Toutain@imt-atlantique.fr</email>
      </address>
    </author>
    <author initials="M." surname="Gudi" fullname="Manoj Gudi">
      <organization>Institut MINES TELECOM; IMT Atlantique</organization>
      <address>
        <postal>
          <street>2 rue de la Chataigneraie</street> <street>CS 17607</street>
          <city>35576 Cesson-Sevigne Cedex</city>
          <country>France</country>
        </postal>
        <email>manoj.gudi@imt-atlantique.net</email>
      </address>
    </author>

    <date year="2023" month="December" day="13"/>

    
    <workgroup>t2t Research Group</workgroup>
    

    <abstract>


<t>blabla</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>YANG modeling language is very popular for node configuration and retrieving the the state of a device.<vspace />
XML and JSON are also to popular way to serialize the data model. Recently a new serialization format has
been published, allowing a more compact representation of the information. This new format is based on CBOR
and the YANG identifier instead of been represented by a unique ASCII string, are mapped to an unique integer.</t>

<t>The mapping between strings and integer is kept in a .sid file usually generated by tools such as pyang.</t>

<t>This document presents some extensions to the sid files, to ease the conversion between CBOR and JSON and also 
to manipulate YANG Data Model in a constraint environment.</t>

</section>
<section anchor="yang-data-model" title="YANG Data model">

<t>A YANG is a modeling language to structure the information and check its conformity. Each element of a YANG Data Model
is identified through an unique identifier. YANG is based on a hierarchical approach. During the serialization phase, 
data are represented either in XML or JSON. In this part we will use the JSON representation. <xref target="RFC7951"/> indicates how to 
to form a JSON structure conform to a YANG Data Model:</t>

<t><list style="symbols">
  <t>Leaves are represented as JSON objects, the key being the leaf name.</t>
  <t>Lists are defined through arrays,</t>
  <t>Identityref is a string0 containing the identifier in the YANG naming hierarchy to an identity,</t>
  <t>…</t>
</list></t>

<t>The YANG Data Model, in <xref target="Fig-YDM"/>, is used to illustrate how data will be serialized. It defines a container
representing a physical object able to perform several measurements. The physical object is battery powered has a status led able 
to change color, and a list of attached sensors returning a integer value.</t>

<figure title="Example of a YANG Data Model for sensors" anchor="Fig-YDM"><artwork><![CDATA[
<CODE BEGINS> file "sensor.yang"
module sensor {
  yang-version 1.1;
  namespace "http://sensorexample.in/sensor-example";
  prefix sen1;

  identity battery-indicator-base-type {
    description
      "a base identity for battery level indicator";
  }

  identity high-level {
    base battery-indicator-base-type;
  }

  identity med-level {
    base battery-indicator-base-type;
  }

  identity low-level {
    base battery-indicator-base-type;
  }

  typedef battery-level {
    type identityref {
      base battery-indicator-base-type;
    }
  }

  container sensorObject {
    leaf statusLED {
      type enumeration {
        enum green  {value 0;}
        enum yellow {value 1;}
        enum red {value 2;}
      }
    }
    leaf battery {
        type battery-level;
    }    
    list sensorReadings {
      key "index";
      leaf index {
        type uint8;
      }
      leaf sensorValue {
        type uint32;
      }

    }
  }
}
<CODE ENDS>
]]></artwork></figure>

<t>The YANG tree regarding this Data Model is given <xref target="Fig-YANG-tree"/>, the tree displays the module hierarchy. For the module “sensor”, a container “sensorObject” contains two leaves (“statusLED”, “battery”) and a list “sensorReadings”.</t>

<figure title="YANG tree associated to the DM." anchor="Fig-YANG-tree"><artwork><![CDATA[
$ pyang -f tree sensor.yang 
module: sensor
  +--rw sensorObject
     +--rw statusLED?        enumeration
     +--rw battery?          battery-level
     +--rw sensorReadings* [index]
        +--rw index          uint8
        +--rw sensorValue?   uint32
]]></artwork></figure>

</section>
<section anchor="json-serialization" title="JSON serialization">

<t>An example of data, serialized with JSON, and conform to the YANG Data Model, is given <xref target="Fig-JSON"/>.</t>

<figure title="JSON structure conform to the YANG DM." anchor="Fig-JSON"><artwork><![CDATA[
{
  "sensor:sensorObject": {
    "statusLED": "green",
    "battery": "sensor:med-level",
    "sensorReadings": [
      {
        "index": 0,
        "sensorValue": 42
      },
      {
        "index": 1,
        "sensorValue": 22
      }
    ]
  }
}
]]></artwork></figure>

</section>


  </middle>

  <back>

    <references title='Normative References'>



<reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC7951" target="https://www.rfc-editor.org/info/rfc7951">
  <front>
    <title>JSON Encoding of Data Modeled with YANG</title>
    <author fullname="L. Lhotka" initials="L." surname="Lhotka"/>
    <date month="August" year="2016"/>
    <abstract>
      <t>This document defines encoding rules for representing configuration data, state data, parameters of Remote Procedure Call (RPC) operations or actions, and notifications defined using YANG as JavaScript Object Notation (JSON) text.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7951"/>
  <seriesInfo name="DOI" value="10.17487/RFC7951"/>
</reference>




    </references>




  </back>

<!-- ##markdown-source:
H4sIAKCzeWUAA81X728bxxH9fn/FgA6QNuFdJLqOY6pN6ki0oUCUAMsoGgRB
sbwbkhsf7667e6JYgfnb82Z373hk7KJov1SwDd3u/No3782u0zRNrFNV8Q9V
1hVPyZmWE90Y/5t1k7OzV2eTpKjzSm2wXRi1dKmrW6d0lbqJS60uUn50XFld
V0mu3JSsK5JGTxMiu9sYXtopfb5j+7ks1MadrDijc3f4zutNo4YLrs67j8Rp
V6KK++srmklOh5wwIF4uda7xXe5ooyrdtKVyTD++vn1LV8opmtcFlzZRi4Xh
h5MAyXaF004cvWPLyuRremvqtklU69a1mSYp6QoF32T0PpwbRQU0blRrEGOw
XhvEuq4sCm0dza9vZ/f0fnYzu7ybX9D1/D29dqVC1n8CZX92ZidApTQhIE8F
U6noco2a9apiozT73ct7On/59dlLAUi73ZSev3jx8mu6ZGvrKr3nB7HGZ8GP
HsO2cgZWb4yqconAG6XLvuAsFvxXvXGp6ivKlqY77Dyjt22h+5POVVX/0i39
nx9yI7VmK9R6er6KXVLVZqOcfsChCD7v3lxOzs9fTcOvL1+9OJ8mSZqmpBYo
HERMsEOLUuFPkoStjS6KkpPkGUBwpi7a3NMo8XTbCNN0tcIRq1WrVkza0gOb
HTW10NLQsjZUwQonqJZ61RrlaQwRkmGoAeeEu1uz/wt1gsn1khRwe9A5Z6j7
7/Mbb//D/d0tKcOkSluLELocW7WTT8tGq1L/K4QqRAm+vgxcz4NcFFW87Q1D
KUuPEa2VTRbMFTXtotR2zcUYicp6K/VJJMOdXFF5YyCfyoUIqFcy6iqEwhLU
swYSkiyGx9dCWS4I9pff371L5ETi5XHUhahzqdkIIx2rQoL6cvpc8F3ICdpK
2kuv7y+vr/1AqVZjD8tGNQ2MgISqOisNvxWbLEner4OFHGfBbiuxg7f16EZL
KfQDNygYTaIMA4+WumRqbQs0drRi4XAsxtV1acm2mCLKUrMDCXwmxMAQbTcy
LmL1MKs3TP3wtFKnb3nMYMd+tgEjvwy6gEdi2VcrsA2IgF88ERK4fXoMhnMg
mhAcZySuHrSpK6ktI6H1wcGzJUlex55YUh8huBANt0XuMFxO2+6LytecfyCN
EwvlsQV1ZzRTAIlL9ph4gp8UmiBfTwOhBsbyaj1sZc+RrC+wp5SiNTZknutc
lYQ+mxoZM7pqTSewY9o3IDyPKfE6EfoMicYaDsJFEvFBwgJ5hgmAQEjbKONo
y7TVZQlmBBx8V46VkdHTUxw0+z2iFSjOsaV1vRUcpXMCEKr3zgdcI3Key6dA
YWR9QTesHhDotG6w0EeqF79w7oRSKOwD78ChDoWS1dLP+UzCaOtClIKXuhri
bozaIQCMrj3wboerPJAiyOZMqpSLpYt8JOKDtpFLLLr+7KJAdYw6RoYsiwI9
OepYAj09vdGr9Mer+X4/lvytDSIH9q2QGpwXPH0ffUMWh1Zzgaa5eDgbhCAl
s0l62MJ8a9Y766kToMONUHquN2x8JyxDjtjeQKHokNDYypTj33l6WjoXLoEt
G1QLqnnYlGstGlCE6NL+fA1dSb/L2oyDpgnTN0jEOVAY1qgSTykrF0ZrqlBv
N64eVIm7DkL+FT/Jny/vrmb0/ezt9e39t2FwjYJ3JsNplEDPbckxIj3hupP1
tBs159n5RXwGWEx6eK+da6ZffRUc+FFtmpIzXcWFNK6MxAt4LvWjxEYQfHcd
7uBIowDgJrpN3a5hXwKhQTY3uvE3K/mfkfLiPgSRi7TDtUQzSurD+ez7o5Rr
vVqnwSxk8MH+TSG/D7Hh4n+MgMvzv4sgH+BsbzsM4lHTA0k+RcT+k+gSP+bo
lRDJcBfYG6L5IRH4ejO76lP43FzhYovPmG6D/CqtjNxT9ORJSWcX++PtHct7
ots+P90WpcS9Sb+3Tw7/+qo6DhxS+6qOoIpHlX+CoygqHPMd3hb+zu/8ZTqO
ABc/ji7iks/jl06ztJDdNxdHpXVg+eh/89V/xOn55OA16MM+KnZ2e3X/bZDw
05SexYFH/n9AfxnNgsg+em16XcQBMdoPpqg8xAHpSpkiDGjMpeGzwNIK7+J+
vMIlFRcZsv41Ku6Ftk2Ja8CvxNHRz/GM3iD1YCdOmtF4OGe71UCvUbeBkNta
kJNb7A+jnmpwHsVWjv44nIej4/aNsjjxPgvPLkqXoeTBtKM47aZxEYh/maZm
e0T40JW43lXx3ZCXketDw1hhb0bH9DuKeVT2F/ST59XPPUOCVSBb/+NpdmIy
INh30eT55IQyXRM74hyIoPC/qlz7d2t8d17NM+HLs/j0GL6N8ASsiA+kk6t1
PLhTcc26tfcLV9bgteI+eokfc00c9/v+zhK1xO5Oj7gyjUIasGNKIz9jRuOw
01Fl2kfop3ZncsKbKf0UgT2oNMp/Smfjw9oAb+z8adLJd/xp9/NPuk8mRzPj
5yj+o+75PsTGffo5eADY9+83SSI4gNMRAAA=

-->

</rfc>

