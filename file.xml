<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.14 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc toc="yes"?>

<rfc ipr="trust200902" docName="draft-toutain-t2t-sid-extension" category="std">

  <front>
    <title abbrev="SID Extention">SID Extention to efficiently manipulate YANG Data Models</title>

    <author initials="L." surname="Toutain" fullname="Laurent Toutain">
      <organization>Institut MINES TELECOM; IMT Atlantique</organization>
      <address>
        <postal>
          <street>2 rue de la Chataigneraie</street> <street>CS 17607</street>
          <city>35576 Cesson-Sevigne Cedex</city>
          <country>France</country>
        </postal>
        <email>Laurent.Toutain@imt-atlantique.fr</email>
      </address>
    </author>
    <author initials="M." surname="Gudi" fullname="Manoj Gudi">
      <organization>Institut MINES TELECOM; IMT Atlantique</organization>
      <address>
        <postal>
          <street>2 rue de la Chataigneraie</street> <street>CS 17607</street>
          <city>35576 Cesson-Sevigne Cedex</city>
          <country>France</country>
        </postal>
        <email>manoj.gudi@imt-atlantique.net</email>
      </address>
    </author>

    <date year="2023" month="December" day="13"/>

    
    <workgroup>t2t Research Group</workgroup>
    

    <abstract>


<t>blabla</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>YANG modeling language is very popular for node configuration and retrieving the the state of a device.<vspace />
XML and JSON are also to popular way to serialize the data model. Recently a new serialization format has
been published, allowing a more compact representation of the information. This new format is based on CBOR
and the YANG identifier instead of been represented by a unique ASCII string, are mapped to an unique integer.</t>

<t>The mapping between strings and integer is kept in a .sid file usually generated by tools such as pyang.</t>

<t>This document presents some extensions to the sid files, to ease the conversion between CBOR and JSON and also 
to manipulate YANG Data Model in a constraint environment.</t>

</section>
<section anchor="yang-data-model" title="YANG Data model">

<t>A YANG is a modeling language to structure the information and check its conformity. Each element of a YANG Data Model
is identified through an unique identifier. YANG is based on a hierarchical approach. During the serialization phase, 
data are represented either in XML or JSON. In this part we will use the JSON representation. <xref target="RFC7951"/> indicates how to 
to form a JSON structure conform to a YANG Data Model:</t>

<t><list style="symbols">
  <t>Leaves are represented as JSON objects, the key being the leaf name.</t>
  <t>Lists are defined through arrays,</t>
  <t>Identityref is a string0 containing the identifier in the YANG naming hierarchy to an identity,</t>
  <t>â€¦</t>
</list></t>

<t>The YANG Data Model, in <xref target="Fig-YDM"/>, is used to illustrate how data will be serialized. It defines a container
representing a physical object able to perform several measurements. The physical object is battery powered has a status led able 
to change color, and a list of attached sensors returning a integer value.</t>

<figure title="Example of a YANG Data Model for sensors" anchor="Fig-YDM"><artwork><![CDATA[
<CODE BEGINS> file "sensor.yang"
module sensor {
  yang-version 1.1;
  namespace "http://sensorexample.in/sensor-example";
  prefix sen1;

  identity battery-indicator-base-type {
    description
      "a base identity for battery level indicator";
  }

  identity high-level {
    base battery-indicator-base-type;
  }

  identity med-level {
    base battery-indicator-base-type;
  }

  identity low-level {
    base battery-indicator-base-type;
  }

  typedef battery-level {
    type identityref {
      base battery-indicator-base-type;
    }
  }

  container sensorHealth {
    leaf statusLED {
      type enumeration {
        enum green  {value 0;}
        enum yellow {value 1;}
        enum red {value 2;}
      }
    }
    leaf battery {
        type battery-level;
    }    
    list sensorReadings {
      key "index";
      leaf index {
        type uint8;
      }
      leaf sensorValue {
        type uint32;
      }

    }
  }
}
<CODE ENDS>
]]></artwork></figure>

<t>The YANG tree regarding this Data Model is given <xref target="Fig-YANG-tree"/></t>

<figure title="YANG tree associated to the DM." anchor="Fig-YANG-tree"><artwork><![CDATA[
$ pyang -f tree sensor.yang 
module: sensor
  +--rw sensorHealth
     +--rw statusLED?        enumeration
     +--rw battery?          battery-level
     +--rw sensorReadings* [index]
        +--rw index          uint8
        +--rw sensorValue?   uint32
]]></artwork></figure>

<figure title="JSON structure conform to the YANG DM." anchor="Fig-JSON"><artwork><![CDATA[
{
  "sensor:sensorHealth": {
    "statusLED": "green",
    "battery": "sensor:med-level",
    "sensorReadings": [
      {
        "index": 0,
        "sensorValue": 42
      },
      {
        "index": 1,
        "sensorValue": 22
      }
    ]
  }
}
]]></artwork></figure>

</section>


  </middle>

  <back>

    <references title='Normative References'>



<reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC7951" target="https://www.rfc-editor.org/info/rfc7951">
  <front>
    <title>JSON Encoding of Data Modeled with YANG</title>
    <author fullname="L. Lhotka" initials="L." surname="Lhotka"/>
    <date month="August" year="2016"/>
    <abstract>
      <t>This document defines encoding rules for representing configuration data, state data, parameters of Remote Procedure Call (RPC) operations or actions, and notifications defined using YANG as JavaScript Object Notation (JSON) text.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7951"/>
  <seriesInfo name="DOI" value="10.17487/RFC7951"/>
</reference>




    </references>




  </back>

<!-- ##markdown-source:
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
4H34rTO8GQKG/wHJ3uqgsBAAAA==

-->

</rfc>

