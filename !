<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 3.0.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc strict="yes"?>
<?rfc compact="yes"?>

<rfc ipr="trust200902" docName="draft-toutain-t2t-sid-extension" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="SID Extention">SID Extention to efficiently manipulate YANG Data Models</title>

    <author initials="L." surname="Toutain" fullname="Laurent Toutain">
      <organization>Institut MINES TELECOM; IMT Atlantique</organization>
      <address>
        <postal>
          <street>2 rue de la Chataigneraie</street> <street>CS 17607</street>
          <city>35576 Cesson-Sevigne Cedex</city>
          <country>France</country>
        </postal>
        <email>Laurent.Toutain@imt-atlantique.fr</email>
      </address>
    </author>
    <author initials="M." surname="Gudi" fullname="Manoj Gudi">
      <organization>Institut MINES TELECOM; IMT Atlantique</organization>
      <address>
        <postal>
          <street>2 rue de la Chataigneraie</street> <street>CS 17607</street>
          <city>35576 Cesson-Sevigne Cedex</city>
          <country>France</country>
        </postal>
        <email>manoj.gudi@imt-atlantique.net</email>
      </address>
    </author>

    <date year="2023" month="December" day="13"/>

    
    <workgroup>t2t Research Group</workgroup>
    

    <abstract>


<t>blabla</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>YANG modeling language is very popular for node configuration and retrieving the the state of a device.<br />
XML and JSON are also to popular way to serialize the data model. Recently a new serialization format has
been published, allowing a more compact representation of the information. This new format is based on CBOR
and the YANG identifier instead of been represented by a unique ASCII string, are mapped to an unique integer.</t>

<t>The mapping between strings and integer is kept in a .sid file usually generated by tools such as pyang.</t>

<t>This document presents some extensions to the sid files, to ease the conversion between CBOR and JSON and also 
to manipulate YANG Data Model in a constraint environment.</t>

</section>
<section anchor="yang-data-model"><name>YANG Data model</name>

<t>A YANG is a modeling language to structure the information and check its conformity. Each element of a YANG Data Model
is identified through an unique identifier. YANG is based on a hierarchical approach. During the serialization phase, 
data are represented either in XML or JSON. In this part we will use the JSON representation. <xref target="RFC7951"/> indicates how to 
to form a JSON structure conform to a YANG Data Model:</t>

<t><list style="symbols">
  <t>Leaves are represented as JSON objects, the key being the leaf name.</t>
  <t>Lists are defined through arrays,</t>
  <t>Identityref is a string0 containing the identifier in the YANG naming hierarchy to an identity,</t>
  <t>...</t>
</list></t>

<t>The YANG Data Model, in <xref target="Fig-YDM"/>, is used to illustrate how data will be serialized. It defines a container
representing a physical object able to perform several measurements. The physical object is battery powered has a status led able 
to change color, and a list of attached sensors returning a integer value.</t>

<figure title="Example of a YANG Data Model for sensors" anchor="Fig-YDM"><artwork><![CDATA[
<CODE BEGINS> file "sensor.yang"
module sensor {
  yang-version 1.1;
  namespace "http://sensorexample.in/sensor-example";
  prefix sen1;

  identity battery-indicator-base-type {
    description
      "a base identity for battery level indicator";
  }

  identity high-level {
    base battery-indicator-base-type;
  }

  identity med-level {
    base battery-indicator-base-type;
  }

  identity low-level {
    base battery-indicator-base-type;
  }

  typedef battery-level {
    type identityref {
      base battery-indicator-base-type;
    }
  }

  container sensorObject {
    leaf statusLED {
      type enumeration {
        enum green  {value 0;}
        enum yellow {value 1;}
        enum red {value 2;}
      }
    }
    leaf battery {
        type battery-level;
    }    
    list sensorReadings {
      key "index";
      leaf index {
        type uint8;
      }
      leaf sensorValue {
        type uint32;
      }

    }
  }
}
<CODE ENDS>
]]></artwork></figure>

<t>The YANG tree regarding this Data Model is given <xref target="Fig-YANG-tree"/>, the tree displays the module hierarchy. For the module "sensor", a container "sensorObject" contains two leaves ("statusLED", "battery") and a list "sensorReadings".</t>

<figure title="YANG tree associated to the DM." anchor="Fig-YANG-tree"><artwork><![CDATA[
$ pyang -f tree sensor.yang 
module: sensor
  +--rw sensorObject
     +--rw statusLED?        enumeration
     +--rw battery?          battery-level
     +--rw sensorReadings* [index]
        +--rw index          uint8
        +--rw sensorValue?   uint32
]]></artwork></figure>

</section>
<section anchor="json-serialization"><name>JSON serialization</name>

<t>An example of data, serialized with JSON, and conform to the YANG Data Model, is given <xref target="Fig-JSON"/>.</t>

<figure title="JSON structure conform to the YANG DM." anchor="Fig-JSON"><artwork><![CDATA[
{
  "sensor:sensorObject": {
    "statusLED": "green",
    "battery": "sensor:med-level",
    "sensorReadings": [
      {
        "index": 0,
        "sensorValue": 42
      },
      {
        "index": 1,
        "sensorValue": 22
      }
    ]
  }
}
]]></artwork></figure>
<?xml version="1.0" encoding="UTF-8"?>
<t><?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.14 --></t>

<t>&lt;!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]&gt;</t>

<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc toc="yes"?>

<rfc ipr="trust200902" docName="draft-toutain-t2t-sid-extension" category="std">

    <front>
        <title abbrev="SID Extention">SID Extention to efficiently manipulate YANG Data Models</title>


        <author initials="L." surname="Toutain" fullname="Laurent Toutain">
            <organization>Institut MINES TELECOM; IMT Atlantique</organization>

            <address>
                <postal>
                    <street>2 rue de la Chataigneraie</street>
           <street>CS 17607</street>

                    <city>35576 Cesson-Sevigne Cedex</city>

                    <country>France</country>

        </postal>

                <email>Laurent.Toutain@imt-atlantique.fr</email>

      </address>

    </author>

        <author initials="M." surname="Gudi" fullname="Manoj Gudi">
            <organization>Institut MINES TELECOM; IMT Atlantique</organization>

            <address>
                <postal>
                    <street>2 rue de la Chataigneraie</street>
           <street>CS 17607</street>

                    <city>35576 Cesson-Sevigne Cedex</city>

                    <country>France</country>

        </postal>

                <email>manoj.gudi@imt-atlantique.net</email>

      </address>

    </author>


        <date year="2023" month="December" day="13" />


    
        <workgroup>t2t Research Group</workgroup>

    

        <abstract>


      <t>blabla</t>




    </abstract>



  </front>


    <middle>


    <section anchor="introduction" title="Introduction">

      <t>YANG modeling language is very popular for node configuration and retrieving the the state of a device.        <vspace />

XML and JSON are also to popular way to serialize the data model. Recently a new serialization format has
been published, allowing a more compact representation of the information. This new format is based on CBOR
and the YANG identifier instead of been represented by a unique ASCII string, are mapped to an unique integer.</t>


      <t>The mapping between strings and integer is kept in a .sid file usually generated by tools such as pyang.</t>


      <t>This document presents some extensions to the sid files, to ease the conversion between CBOR and JSON and also 
to manipulate YANG Data Model in a constraint environment.</t>


</section>

    <section anchor="yang-data-model" title="YANG Data model">

      <t>A YANG is a modeling language to structure the information and check its conformity. Each element of a YANG Data Model
is identified through an unique identifier. YANG is based on a hierarchical approach. During the serialization phase, 
data are represented either in XML or JSON. In this part we will use the JSON representation.         <xref target="RFC7951" />
 indicates how to 
to form a JSON structure conform to a YANG Data Model:</t>


      <t>        <list style="symbols">
            <t>Leaves are represented as JSON objects, the key being the leaf name.</t>

            <t>Lists are defined through arrays,</t>

            <t>Identityref is a string0 containing the identifier in the YANG naming hierarchy to an identity,</t>

            <t>â€¦</t>

</list>
</t>


      <t>The YANG Data Model, in         <xref target="Fig-YDM" />
, is used to illustrate how data will be serialized. It defines a container
representing a physical object able to perform several measurements. The physical object is battery powered has a status led able 
to change color, and a list of attached sensors returning a integer value.</t>


      <figure title="Example of a YANG Data Model for sensors" anchor="Fig-YDM">        <artwork>&lt;![CDATA[
          <code begins=""> file "sensor.yang"
module sensor {
  yang-version 1.1;
  namespace "http://sensorexample.in/sensor-example";
  prefix sen1;

  identity battery-indicator-base-type {
    description
      "a base identity for battery level indicator";
  }

  identity high-level {
    base battery-indicator-base-type;
  }

  identity med-level {
    base battery-indicator-base-type;
  }

  identity low-level {
    base battery-indicator-base-type;
  }

  typedef battery-level {
    type identityref {
      base battery-indicator-base-type;
    }
  }

  container sensorHealth {
    leaf statusLED {
      type enumeration {
        enum green  {value 0;}
        enum yellow {value 1;}
        enum red {value 2;}
      }
    }
    leaf battery {
        type battery-level;
    }    
    list sensorReadings {
      key "index";
      leaf index {
        type uint8;
      }
      leaf sensorValue {
        type uint32;
      }

    }
  }
}
            <code ends="">
]]&gt;&lt;/artwork&gt;&lt;/figure&gt;

              <t>The YANG tree regarding this Data Model is given                 <xref target="Fig-YANG-tree" />
</t>


              <figure title="YANG tree associated to the DM." anchor="Fig-YANG-tree">                <artwork>&lt;![CDATA[
$ pyang -f tree sensor.yang 
module: sensor
  +--rw sensorHealth
     +--rw statusLED?        enumeration
     +--rw battery?          battery-level
     +--rw sensorReadings* [index]
        +--rw index          uint8
        +--rw sensorValue?   uint32
]]&gt;</artwork>
</figure>


              <figure title="JSON structure conform to the YANG DM." anchor="Fig-JSON">                <artwork>&lt;![CDATA[
{
  "sensor:sensorHealth": {
    "statusLED": "green",
    "battery": "sensor:med-level",
    "sensorReadings": [
      {
        "index": 0,
        "sensorValue": 42
      },
      {
        "index": 1,
        "sensorValue": 22
      }
    ]
  }
}
]]&gt;</artwork>
</figure>


&lt;/section&gt;


  &lt;/middle&gt;

                <back>

                    <references title="Normative References">



                  <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119">
                      <front>
                          <title>Key words for use in RFCs to Indicate Requirement Levels</title>

                          <author fullname="S. Bradner" initials="S." surname="Bradner" />

                          <date month="March" year="1997" />

                          <abstract>
                              <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>

    </abstract>

  </front>

                      <seriesInfo name="BCP" value="14" />

                      <seriesInfo name="RFC" value="2119" />

                      <seriesInfo name="DOI" value="10.17487/RFC2119" />

</reference>


                  <reference anchor="RFC7951" target="https://www.rfc-editor.org/info/rfc7951">
                      <front>
                          <title>JSON Encoding of Data Modeled with YANG</title>

                          <author fullname="L. Lhotka" initials="L." surname="Lhotka" />

                          <date month="August" year="2016" />

                          <abstract>
                              <t>This document defines encoding rules for representing configuration data, state data, parameters of Remote Procedure Call (RPC) operations or actions, and notifications defined using YANG as JavaScript Object Notation (JSON) text.</t>

    </abstract>

  </front>

                      <seriesInfo name="RFC" value="7951" />

                      <seriesInfo name="DOI" value="10.17487/RFC7951" />

</reference>





    </references>





  </back>


              <!-- ##markdown-source:
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
4H34rTO8GQKG/wHJ3uqgsBAAAA==

-->


&lt;/rfc&gt;


{::nomarkdown}


  &lt;/middle&gt;

                <back>


                    <references title="Normative References">


{:/nomarkdown}


![:include:](RFC2119){: anchor="RFC2119"}





![:include:](RFC7951){: anchor="RFC7951"}


{::nomarkdown}



    </references>





  </back>


              <!-- ##markdown-source:
H4sIAAAAAAAAA+1b6ZLjRnL+j6eopRwhaTkkSPBu9bTM+z4BNg+FwgEChYPE
RaBAEpwYh5/GD+YncRYAXq1pXbtee8PToRk1ClVZWZlfZmV+5KRSKcYjoiX/
m2jYFn5CxPUxoztu+JtHuEymkuEY2ZYs0YTXsisqJEVsn4i6lSIcSXm6nMIn
gi1Pty1GEskT8ojMOPoTg5AXmC5WvCf0bYC9b+mA7ZI3I8TVJXJ7lmzTEe8H
iC1dHhiiEwO04LsN1KR7EtgTJiCsKLqkw7MRIFO0dMc3RILRqjpqo4ZIRDS0
ZWx4jLjZuPjwRgBzVOG0HEEz7GHRlTTUdm3fYUSfaLb7xKSQboHCgzQSonOD
UpE1BqLvgoy7cdsFWV3LA0V9gobdUZNHQnPQrI+HP6DuUEBVYoiw6x6sHJ4d
Y0INlUIcAssjGSNDRHUNdNZVC7uijsO3dR5lS8VMiRpIJ8ETyhUKpSKqY8+z
rRSPD3Q2PMr4FNrQt4gLs1quaElUAjZF3bgqnI4V/lfdJCnxqlFacS+HHaZR
25f160mHomVvL0P/xw9pUl3TKuj69nwWJoxlu6ZI9AMcCsGaWavOZbOVp+jX
UqWQfWKYVCqFxA0oDkBk4A3aGCL8xzDRK1OXZQMzzDdgBOLasi+FMGJCuJkU
abqlwhEt1RdVjHQPHbAbIMemsHSRYrvIgllwAkvRVd8VQxhDECIXQzTAOWE5
0XD4B6ITkGwrSAS7HXQJp0Hv5XAQzu/x4xESXYxEw7NpIFz2OIoBffSwq4uG
fo5EyTQSQv3SgHUpChcRWfh4nRipooQ2QproMRuMLeT4G0P3NCx/gI0M+0j1
o5JcfAlX0NxxIXwsEkkAfemOuhWJgiGIHg0sQTeLxcPTRvSwjGB+vTaeMfRE
dFVoR12m0ano2KWIJFiUqdBQnetesHZDT+Bb1L2oyte73TChWOqH0Cym6Dgw
CSwhWpdZOqxTsZtmGEGLZtDjbDA5UtnRai+0bjyTKrrDDigMTkJpSHhI0Q2M
fM8HawRIxRTDsTLEtg0PeT5kEdFDTgAgCHcCGZBEfZOmi1h7mGabGF2Tp0f1
DF0e7+B9CHMb2CgcBrgAjujMq7bUbHdAgF9CIDCw7P00GJ0DpFGAwxkRtg66
a1tUtzSisL4tCNHCMNXYJx4SvwBwCjS4LSQCyeWt20OlJA1LO6TDiSnk4RVE
dxo1RTASNnBokxDgbxRlYL8rDCg0IC2r2r0rrxhJXxW8QkpEGryg+VyXRAOB
n10bdkyjhu9eAuwR9g4AHn9ATBgnFD73QMM6LKBYRDT4IISpydOQAUAQbOuI
LkFHjI66YQAyIjuEXnmMjDT69ClONJ8/gzQZlCPYQ5p9pHaknqMGAu3DxTe7
xpYLsfzWUJCy/ooGWDyAoLd6AwpDSfZmiyVCIQWK7XAAGLpYwcCiEub5NBWj
eySSImNFt+7t7rpiAAJgUjc0PAngKo9AEYVNhmpJL5aL5IcgvsU27EVnXPwT
xAGqx1I/wA7pdBygb476gQr69Kmlq6lVY/j58we6v+9FQQ629ymoAfPUnqEf
Q4dsbq7GMjiNxIfzokCgKmOXuZotym+OFnghdCLTwY1ghFh3sBt6wsMQjvDa
hAgFD1EYezTL4V+sDGFJSHQJHLEL2gLUQrOJxPfAAXIknbpf0iCuqL8N2/0Q
xTSC7BuFCCEAYZgNWkIp5dELw3etSN9LujqIBtx1EMj/Dj/Mc33caKJas90d
8S9R4kpEq9M0OSUYiGffwLFE9AmuOzqeuqSabDr7Q1wGeJDpYbVGiPPEstEC
fBJNx8Bp3YoHUvFIgq4Ceyr6icoGIfB88fDFHKk4AGAZjdsUCRwcqoDAQZ7k
6k54s6LwJyGGwX0TQi/Si10NcIaBruLC3T8/bKnpqpaKpkU7hMJ+RZFfijCx
/DdKgMvzz0mgD4DZ69x7IaHV9LuQ/BRb7PdIp/LjPa6REINhHKE3khYmiQiv
g2bjukW4N7bgYovLmMsLFI4i1aX3FPoUghJlfvj8+DrAtJ64vM6+fU0jJX7H
Xd99Zm5/h1pdMHDbOtTqwVTxUelf0UIaUdExZ1BbhHf+ZT3NjgkwFz4lfoiH
wn3Cobe7+BB25R8eVLsYK5T+Gmr/hUU57rbqzg+f44htjhr8SxTCn57QN3HC
Q2EH9DHRjILsi9dmGBdxgkh8vsuitBAHk6qiK0cJGvLSfVngIRXq4mt6hSUp
uoQm2bAapctl3XMMuAbCkTh1XPN4GrVg67s3caZJfLjPs5fRCF6JywsQebSp
5egt9l3iCjVYnIhdmfj+Ph8mHt2XSMcZ71+isgullEjlu2yH4mz3FA+CxZOp
lHt8AHzklXj8osWP97iMsX4/MdbwOg09wu9B5oPaf0U/hbj6+YqQaFYEtutP
CLM3U+4A9mM8Jce9gczFiRfg3IAgQlcl6WHdGtedjWGa4uWbuPS4r42gBLQQ
voGOXq0f7u5UuGaJFq6Lrqy7aoV88RJ/xBpd+Pnz9c6i0RJ79+kBK09xIN2h
4wklwhyT+BC9uUDl6SrhmrUvU97g5gn9FBv2FqVx+D+hzIfb2J294U2eu4Tv
h/eXZ99dznEPOePnOPgfvBf6IXbc++XgzcCh/55/PJkGiq/vj4lsOpMA0Eo2
PezHxFxopcqJH19gu3BiyiMBdBoatOhhavqYINCQsCfPSCAN7pKPCVeRuCJX
ScMQBGu08i/QBT+0PbQm8KAoUAEG/iYNXSEriRub3bmiKdtHKxVLQbeyIpfO
5lEq9cIwz39pjOvCatJEMAvxK15oDtF1X5nICfDQz3Tij3RCTCp9TATYoyeJ
R2Nm6e1wSC+9GYyb1jejxJauI8wzHdEdF+xx48EStIcbQSX0MfEbRBhkNTCN
arvBR8CqnHihKf5ZgS6LvIT+fg7diiJC6mPigZBKvPxZguuZDcW+RBfKc8Rg
QSrRCcQpmGaQTkBv6lrhEWISKIEU3zCioTeEVuIlxuiz7aqwa5QLXn4f9fPM
Piy6SBJlGYps7+UaF8+ODdFs3AZgKOKMXt6li57ZeMZ16oU7ur65F0fZpJf3
yaRnNpzwsCIil14ibgkmxM83rdm3aj+H9NPLb1Jsz2w08WIQ9sEi8Bg67eUd
Dw7vPUj5uHv33Vi6r5774577Vd7w93otepRpcAZYhPTBZbhcAuohi2gfEw0s
YXODXUgkImSGbC7BxkuidUfb3amUfH75JR/9zN7eRktiiMREJQhinslLRFVC
IqDPF+XuptDnOA/R3yMuM1zrYSlmbCQ4yke4w27kZuJyDd0znjSrwY7/INrz
+RD1n2Cxr/Tn305/RggB9/2jWNC7Df9ZyNBYZTaOjJdfxkhIlVBgpUJgJR7K
7BuDGkfKVxr170ejPp8o00FEV8VQyMWUKqTTvxunesXrc8QV0DoZirnA3AC2
w/sV3v09SNdwo0jab3Gvt6n/wwzsbaP/+o//DB+eWWqGl4e08SVu9tEvMW0B
fvlK1L5D1MYWDa9E/If5nWsmulj65RlCiFYKL89/+aneqArVn75ywF854D/L
AXewaBDtKweM/vc44J9/hqx7DWo2ShRvkvDvpXa/kJ0vDCHk6C+mot9iDB8z
0FXal/LQn2dmIxj+kzOz7zry0eC/k+l7sDtd80WT/5JKjUz5/4BKfdfct3o+
aoevPTA8bERpd+niIVSgBLAkqD4i13w7unx5CBrIy7tvw0b7Nvnql/irRYlr
uF1I0uPxmHYVKYVlHVJx2nZVlpb6LGU86YKXL3KFL31ISXAW2QsvPVocQ7kF
m4StUjeuekGxva9HRQ4aUFfdSMFQVswo3UgjPo1qrihblJW48Uz8Pc90ec++
3NEbMaUxpPVjIiY7spVK6TrrxjpE3qFVq0VbsQCFXzkU6VHojN21G/SutVp0
UFoKX2pGT1ctXQnCIHBvh/Quda3nYAkKXenabkOFeCfGVqCzRJLo6ORSXT42
opdCk9wvDB9BX832DZlWp7R2c6GkoUkQNu42hdZN+7ciY5Vo9WrR74ph18IE
1TBcO3XfDZnWCbWQTiGmxB+dXefVbdOEDg2q8ZgkgV6N9gey7km+5126Qs9X
VRgPe2YqQzehQzvEVW5cxz+SQHcUEGXsoN7GXhcAiGJv1yeJqDYFh+Yjd/5y
FgDvOitE7TvzGuPuTVomnS3lyyX2Ehos7SuukfPyXhiFrd0fCaNwwTthFKbX
ZvyBCC2wb/fk5XMsmmN/I2oGaTTQbLITE+/R6/HrL8VM1Veh/UlcGcJs8deC
5sswvXykg1y4NSPPP7RFjyxb/HldSKpFv0OnDWoC1Dxqgxk2bXg1cW0Jy/TW
qYvQjX03m9S/R7YT36oe7dfFMHV6ESYtm1xDzrs2rb5HFQgvKtoIiweRD8t4
FH+hYGTHNNl31BffI/qJ059C6j0G4/b/D2HwsuYRg1fa9Jb/L6PPbHw/hJ+A
ffONKbq78OMtz/ZdCT8xnbzXrY74MV7Mq9VydrlZlDej0yB5cCu6XVvZmfY+
R0g30ypZy6Vpu/vpYVDFfdXvd22mbjo5p704c4Tjl0N/byslDuc3O9coip2u
i43TyJsGglVZG5Zm8aJjG9m9XkjOX18FplzgpaKwnblKR3F7vmQJGdYMZq1d
Rd5v8aS+778OlvKw4ODDXHg97eV1J1CTE7G4X48ZyV+Y6xY3I5292BxZhDs0
eME3hYFMJuv+8FQyhU57zZVYwTlk95lirlMb5fQy72S5FtMfF32XU82Jli1P
7Vrel/nCyXXFjOG++n5mX1hrSaXTKen74nx+nh3q+4Jna6vBkZUspuYMRnVi
jDuDrBaU3V1vkwkEWTL31shYFdc93nXax4a0PkyzhW5Rr57s3L7RPkqlhtRm
yL7g6plqacZOXK6ykw/rnHyuF5RzwNr4UFwsXa1/xOQwHVnW2T82972pWRvz
zqpvz5nlWuwuxMp+tNufJyWubLMja1nIV5r5eobLlJxAHlvnUnHHl0RuLw9L
B012BlWSLNc0jiHCeIpNY26tvNZSJ3Jj2rKGuMYWN6+D7Kw2I9tZxTuMh0tr
0eps+/K+5BaIzBYnmUrADDYts1+eFU2DHQ32u42XXY9zwdBRveLGKGChzE6s
DNvIcsrYKlSGO14ez7PVfk3Nqz1GMLVZXznueEETi8W+PW7uklV1Ox41F0t8
sg3LLLir9d5/zeinpfW6P4lTkttM1nPidZnBNEPamWHW6dVqB5l3z7o2WZ2n
Wnu+ynWbSdsvDCqDki0I7eLC6TY2BylfmFbOrEUqeSaJ2cOSJPnhLth7diYz
9StbuyQGpB1k9gfhcHydahZubINyIzsZ8APbsXMqV+2u8e7E2MZgvR62pHnF
I30zOxh46+NrY77R52WvjUub1rqdq/lZweeqtfLK6SynssA1BzmjWaszVnN5
XtS5eWHVVRVQpnjGvXV9JnZ2ssx3JH80I5rTHr3qraZy9qsDXz307L5vHCaC
zpQOgyKnJud4u+S8/umVy3S7fF8vGpXBdFHq9Hb+jLT56c6Cp62sjjkibtvB
3Mh0FInpmtW5LnSHk5a71/fmuSM3Vhl73zqem6vsmX/tydBq6dqgNFvtyr2C
Ws2MM4uyn9dHrQbjtnbnhjQReCdIFkbtRkc5rGv2uTzy1XrHtnbNfq4q76pN
ZdJq8v0Glxeaq7JdzXYFLWB6/dKBLIy9zme2tvKKj5uhwb+Wmqah8aWgnW9W
udwM54/LZgk8Nunz5ZKym2/aU2snMfbGO5u6WT3VXktC41wTjr1Rvp1U1ddq
Y5UzXjvOOsg3Va7W0Ka80e5VC5Y1NqRXWyqajCrhobt1hVFFPZVevanl4Xmy
kZ8ltSO/FeZzrevtzitp0fLUs1CtrlRCFu25tHFszmf62+o2P667Ejmu20Im
edq1z1y5Jaq4Ki2CPVwAVduYjavNQXaZ84fiThlJE3Xe7yaJwPhmK9vIjC1p
NW7ljP452Xs99wqz+mpcydePpWy/xXuGVRqvuV57ccJea3CeV/iOf9qrhGk0
GzanTg7E3fargVHnCqee0emfKj1xYlpbhWOrRtPKVojbqsmbaVGzJU8/Zos7
31kxjUYmeSC8WxliN7nI51qHpNyYZ8alhqeNBPWAJ3YxaXe9yn5pVnev56Gw
27R3rfraGQ4Zr7ssZJ31pljcCfZwPJp3TJ9wp3KPD7adZbs8s7E+3fW2/ex4
zBYFR8SG5Fen3KZWJcx+vNbmxeK536zO3OahUD71Kj1l4be3w/Fkzq0O+1bL
qo5bXcBdec0HktnKOGrpVPEne2ZpLPLFSqOrJOuC0lkWkqbTzpULeCmzWJll
2tlAs9fnvjRTraIvevnFftZZdnBgseKWKWyPpUN+O6l2Sa+RzPH+clNMYrmm
zti5v8/kM7mlxI8nY37AVwvZLqu3M6vjZn+QqpUO09a8qkj6ub3sc6XmUG0N
tybcPcm1vmTbvKXkOt5Wcjqc31rZs92iMcaVipzkg2zfC5jGYlBTzwq3PA4K
Xn6XbbHJbe01wEo5WR8MG+upspnqTXnUKQm7VUbw3Ky6TFY6nUzVnDGNUfK0
N45rV9lpTUUrDkueuOxsleV4pOvl5Iq1G+XBnhvmWpNMsWn01idcyieHJMj5
OjM559nJej3WF1jIL4JlacIW9x17XGrlSvtuUdX3Vt8qVu3ObMkr3XFO27Bn
nOPWW31SZU7T5FYvbQ1oJck8KMucn1daGaxVFrVC8czmi6PkttKGM5739jEo
cKXxmSv6JTcz7E+YOWvbjS3cTMdORTpPB4KywWJlkpvNjlO7kqu1eovOuF6T
+6/jZnXFFeSJ6nkDoe7n1BXjZmu92WKR04uTXZ6tY3s5XQs1bthcOVtIKbmd
5FjiwuZmmWO/KG0q1s5SOrVVeedrU2bYWp+a/cnW10rrSd21HJYXBhXwOzur
9Y3ZKTnZFq2VKr2Oi5v+pLeTjP6g43DJruU3mZZSkIPNK9scrjo5eV7eZXrN
eq666LGNTLOXm40Gvd2oXW+469bBHjXz1lCYr4WK2G6ueWaQ6w6r+ozVPYv0
Z3phIi7O5WXp0G1jSWl0HF+wkt7ELdQqc2tXHLeTjV2QPGo1Ntj3mHwnl3eF
cbk97bfBaL2cv1e9WhV+Pn6k/w4n7OSh1of//zcaOmoGxjYAAA==

-->


&lt;/rfc&gt;

{:/nomarkdown}
</code>
</code>
</artwork>
</figure>
</section>
</middle>
</rfc>
</section>
