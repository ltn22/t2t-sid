



t2t Research Group                                            L. Toutain
Internet-Draft                                                   M. Gudi
Intended status: Standards Track  Institut MINES TELECOM; IMT Atlantique
Expires: 16 June 2024                                   14 December 2023


        SID Extention to efficiently manipulate YANG Data Models
                    draft-toutain-t2t-sid-extension

Abstract

   blabla

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 16 June 2024.

Copyright Notice

   Copyright (c) 2023 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.








Toutain & Gudi            Expires 16 June 2024                  [Page 1]

Internet-Draft                SID Extention                December 2023


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  YANG Data model . . . . . . . . . . . . . . . . . . . . . . .   2
   3.  JSON serialization  . . . . . . . . . . . . . . . . . . . . .   4
   4.  CBOR Serialization  . . . . . . . . . . . . . . . . . . . . .   5
   5.  Conversion between JSON and CBOR  . . . . . . . . . . . . . .   8
   6.  Normative References  . . . . . . . . . . . . . . . . . . . .   8
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .   8

1.  Introduction

   YANG modeling language is very popular for node configuration and
   retrieving the the state of a device.  XML and JSON are also to
   popular way to serialize the data model.  Recently a new
   serialization format has been published, allowing a more compact
   representation of the information.  This new format is based on CBOR
   and the YANG identifier instead of been represented by a unique ASCII
   string, are mapped to an unique integer.

   The mapping between strings and integer is kept in a .sid file
   usually generated by tools such as pyang.

   This document presents some extensions to the sid files, to ease the
   conversion between CBOR and JSON and also to manipulate YANG Data
   Model in a constraint environment.

2.  YANG Data model

   A YANG is a modeling language to structure the information and check
   its conformity.  Each element of a YANG Data Model is identified
   through an unique identifier.  YANG is based on a hierarchical
   approach.  During the serialization phase, data are represented
   either in XML or JSON.  In this part we will use the JSON
   representation.  [RFC7951] indicates how to to form a JSON structure
   conform to a YANG Data Model:

   *  Leaves are represented as JSON objects, the key being the leaf
      name.

   *  Lists are defined through arrays,

   *  Identityref is a string0 containing the identifier in the YANG
      naming hierarchy to an identity,

   *  ...





Toutain & Gudi            Expires 16 June 2024                  [Page 2]

Internet-Draft                SID Extention                December 2023


   The YANG Data Model, in Figure 1, is used to illustrate how data will
   be serialized.  It defines a container representing a physical object
   able to perform several measurements.  The physical object is battery
   powered has a status led able to change color, and a list of attached
   sensors returning a integer value.

   <CODE BEGINS> file "sensor.yang"
   module sensor {
     yang-version 1.1;
     namespace "http://sensorexample.in/sensor-example";
     prefix sen1;

     identity battery-indicator-base-type {
       description
         "a base identity for battery level indicator";
     }

     identity high-level {
       base battery-indicator-base-type;
     }

     identity med-level {
       base battery-indicator-base-type;
     }

     identity low-level {
       base battery-indicator-base-type;
     }

     typedef battery-level {
       type identityref {
         base battery-indicator-base-type;
       }
     }

     container sensorObject {
       leaf statusLED {
         type enumeration {
           enum green  {value 0;}
           enum yellow {value 1;}
           enum red {value 2;}
         }
       }
       leaf battery {
           type battery-level;
       }
       list sensorReadings {
         key "index";



Toutain & Gudi            Expires 16 June 2024                  [Page 3]

Internet-Draft                SID Extention                December 2023


         leaf index {
           type uint8;
         }
         leaf sensorValue {
           type uint32;
         }

       }
     }
   }
   <CODE ENDS>

             Figure 1: Example of a YANG Data Model for sensors

   The YANG tree regarding this Data Model is given Figure 2, the tree
   displays the module hierarchy.  For the module "sensor", a container
   "sensorObject" contains two leaves ("statusLED", "battery") and a
   list "sensorReadings".

   $ pyang -f tree sensor.yang
   module: sensor
     +--rw sensorObject
        +--rw statusLED?        enumeration
        +--rw battery?          battery-level
        +--rw sensorReadings* [index]
           +--rw index          uint8
           +--rw sensorValue?   uint32

                 Figure 2: YANG tree associated to the DM.

3.  JSON serialization

   An example of data, serialized with JSON, and conform to the YANG
   Data Model, is given Figure 3.  Embedded JSON Objects allows to
   represent the hierarchy.  The key of the outer JSON Object is
   composed of the module name and the container name.  The embedded
   JSON Object associated to this this contains the leaves as keys.  The
   YANG list is represented by an JSON Array.













Toutain & Gudi            Expires 16 June 2024                  [Page 4]

Internet-Draft                SID Extention                December 2023


   {
     "sensor:sensorObject": {
       "statusLED": "green",
       "battery": "sensor:med-level",
       "sensorReadings": [
         {
           "index": 0,
           "sensorValue": 42
         },
         {
           "index": 1,
           "sensorValue": 22
         }
       ]
     }
   }

              Figure 3: JSON structure conform to the YANG DM.

4.  CBOR Serialization

   JSON notation is verbose for constrained networks and objects.  To
   optimize the size of the representation, [RFC9254] defines a CBOR
   serialization also called CORECONF.  YANG ASCII identifiers are
   replaced by unique number.  In JSON, the uniqueness is guaranteed by
   the "namespace" URI, as shown in Figure 1, by construction the rest
   of the identifiers are unique.

   In CORECONF, the uniqueness is guaranteed through the use of positive
   integers called SID, which replaces the ASCII identifiers.
   [I-D.ietf-core-sid] defines the allocation process.  Module
   developers may ask for a SID range from their authority.  For
   example, for an IETF module, the IANA will allocate a SID range.

   The Figure 4 shows an example of this conversion.  The range is
   arbitrarily fixed between 60000 and 60099.  Note that the module, the
   identity and the leaves have an assigned SID.














Toutain & Gudi            Expires 16 June 2024                  [Page 5]

Internet-Draft                SID Extention                December 2023


   $ pyang --sid-generate-file=60000:100 --sid-list sensor.yang

   SID        Assigned to
   ---------  --------------------------------------------------
   60000      module sensor
   60001      identity battery-indicator-base-type
   60002      identity high-level
   60003      identity low-level
   60004      identity med-level
   60005      data /sensor:sensorObject
   60006      data /sensor:sensorObject/battery
   60007      data /sensor:sensorObject/sensorReadings
   60008      data /sensor:sensorObject/sensorReadings/index
   60009      data /sensor:sensorObject/sensorReadings/sensorValue
   60010      data /sensor:sensorObject/statusLED

   File sensor@unknown.sid created
   Number of SIDs available : 100
   Number of SIDs used : 11

              Figure 4: JSON structure conform to the YANG DM.

   To perform the allocation, the pyang command generates a .sid file in
   the JSON format, resulting itself of a YANG Data Model specified in
   [I-D.ietf-core-sid].  The Figure 5 gives an excerpt.


























Toutain & Gudi            Expires 16 June 2024                  [Page 6]

Internet-Draft                SID Extention                December 2023


   {
     "assignment-range": [
       {
         "entry-point": 60000,
         "size": 100
       }
     ],
     "module-name": "sensor",
     "module-revision": "unknown",
     "item": [
       {
         "namespace": "module",
         "identifier": "sensor",
         "status": "unstable",
         "sid": 60000
       },
       {
         "namespace": "identity",
         "identifier": "battery-indicator-base-type",
         "status": "unstable",
         "sid": 60001
       },
       ...

              Figure 5: JSON structure conform to the YANG DM.

   The serialization in CBOR of the JSON example Figure 3 is given
   Figure 6.  Compared a compacted representation of the JSON structure
   (152 Bytes), the CORECONF structure is 24 byte long.  If the size is
   different, the structure is the same.  It is composed of embedded
   CBOR Maps (equivalent of JSON Object).  The first key is a SID (60005
   correspond to the container).  Embedded CBOR Maps uses a delta
   notation to encode the keys.  The key 5 correspond to SID 60005+5, so
   to the leaf "statusLED".  Key 2 in the second CBOR Map corresponds
   the YANG list "sensorReadings", the elements of the list are stored
   in a CBOR Array.

   Note that in this example, the enum for "statusLED" (60005+5) is an
   integer and the identityref for "battery" (60005+1) is also an
   integer pointing to the SID "med-level" (60004).











Toutain & Gudi            Expires 16 June 2024                  [Page 7]

Internet-Draft                SID Extention                December 2023


   b'a119ea65a305000119ea640282a2010002182aa201010216'

   Diagnostic notation:
   {60005:
     {5: 0,
      1: 60004,
      2: [
        {1: 0,
         2: 42},
        {1: 1,
         2: 22}
        ]
     }
   }

              Figure 6: JSON structure conform to the YANG DM.

5.  Conversion between JSON and CBOR

6.  Normative References

   [I-D.ietf-core-sid]
              Veillette, M., Pelov, A., Petrov, I., Bormann, C., and M.
              Richardson, "YANG Schema Item iDentifier (YANG SID)", Work
              in Progress, Internet-Draft, draft-ietf-core-sid-23, 30
              October 2023, <https://datatracker.ietf.org/doc/html/
              draft-ietf-core-sid-23>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC7951]  Lhotka, L., "JSON Encoding of Data Modeled with YANG",
              RFC 7951, DOI 10.17487/RFC7951, August 2016,
              <https://www.rfc-editor.org/info/rfc7951>.

   [RFC9254]  Veillette, M., Ed., Petrov, I., Ed., Pelov, A., Bormann,
              C., and M. Richardson, "Encoding of Data Modeled with YANG
              in the Concise Binary Object Representation (CBOR)",
              RFC 9254, DOI 10.17487/RFC9254, July 2022,
              <https://www.rfc-editor.org/info/rfc9254>.

Authors' Addresses

   Laurent Toutain
   Institut MINES TELECOM; IMT Atlantique
   2 rue de la Chataigneraie



Toutain & Gudi            Expires 16 June 2024                  [Page 8]

Internet-Draft                SID Extention                December 2023


   CS 17607
   35576 Cesson-Sevigne Cedex
   France
   Email: Laurent.Toutain@imt-atlantique.fr


   Manoj Gudi
   Institut MINES TELECOM; IMT Atlantique
   2 rue de la Chataigneraie
   CS 17607
   35576 Cesson-Sevigne Cedex
   France
   Email: manoj.gudi@imt-atlantique.net






































Toutain & Gudi            Expires 16 June 2024                  [Page 9]
